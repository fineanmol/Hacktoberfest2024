from sys import stdin
# Following is the Node class already written for the Linked List
class Node :
    def __init__(self, data) :
        self.data = data
        self.next = None

def findNode(head, n) :
    current = head  # Initialise temp
    count = 0  # Index of current node
    while (current):
        if (current.data == n):
            return count
        count += 1
        current = current.next
    return -1

def takeInput() :
    head = None
    tail = None

    datas = list(map(int, stdin.readline().rstrip().split(" ")))

    i = 0
    while (i < len(datas)) and (datas[i] != -1) :
        data = datas[i]
        newNode = Node(data)

        if head is None :
            head = newNode
            tail = newNode

        else :
            tail.next = newNode
            tail = newNode

        i += 1

    return head


#to print the linked list 
def printLinkedList(head) :

    while head is not None :
        print(head.data, end = " ")
        head = head.next

    print()

#main
try:
    t = int(stdin.readline().rstrip())

    while t > 0 :

        head = takeInput()
        i = int(stdin.readline().rstrip())
        print(findNode(head,i))

        t -= 1
except:
    pass
